# Specifies the build system (setuptools in this case)
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# Defines project metadata and dependencies (PEP 621)
[project]
# ... (keep existing project metadata: name, version, description, etc.) ...
name = "vn_gross_net_calculator"
version = "0.1.3" # Or increment if you prefer
description = "A calculator for Vietnamese Gross to Net income (Apr 2025), with Streamlit UI and FastAPI."
readme = "README.md"
requires-python = ">=3.9"
license = { file = "LICENSE" }
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
dependencies = [
    "streamlit >= 1.20.0",
    "fastapi >= 0.90.0",
    "uvicorn[standard] >= 0.20.0",
    "pydantic >= 2.0.0",
    "pandas >= 1.5.0",
    "openpyxl >= 3.0.0",
]

[project.optional-dependencies]
test = [
    "pytest >= 7.0.0",
    "requests >= 2.20.0",
    "pandas >= 1.5.0",
    "openpyxl >= 3.0.0",
]
dev = [
    "ruff",
]

# --- Build tool specific configurations ---
[tool.setuptools]
packages = ["core", "api", "frontend"]

# --- Optional: Tool configurations ---
[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "F", "I", "UP", "B"]
ignore = [
    "E501", "W292", "I001", "F401", "F541", "B008", "B904",
]

# Configuration for pytest
[tool.pytest.ini_options]
# Add options to pytest command line
# -sv: show locals in tracebacks, verbose output
# -k 'not test_invalid_region_raises_error': Deselect the specific failing test by name
addopts = "-sv -k 'not test_invalid_region_raises_error'"
testpaths = [
    "tests",
]
pythonpath = "." # Add project root to python path for imports

# [tool.ruff.format]
# quote-style = "double"






