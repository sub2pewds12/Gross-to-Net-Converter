services:
  api:
    build:
      context: ..
      dockerfile: docker/api.Dockerfile
    ports:
      - "8000:8000"
    networks:
      app_net:
        aliases:
          - api   # Ensures internal DNS resolution for "api"
    environment:
      - DATABASE_URL=postgresql://postgres:your_password@db:5432/your_db
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
    ports:
      - "8501:8501"
    networks:
      - app_net      # Ensure this service is on app_net
    environment:
      - API_URL=http://api:8000    # Use Docker alias 'api'
    depends_on:
      - api
    restart: unless-stopped

  db:
    build:
      context: ..
      dockerfile: docker/db.Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_db
    ports:
      - "5432:5432"
    networks:
      - app_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data:/var/lib/postgresql/data
    restart: unless-stopped

networks:
  app_net:
    driver: bridge



